AWSTemplateFormatVersion: "2010-09-09"
Description: "Provisions resources needed to run the notes application: frontend, authentication services, backend and data storage"

Parameters:
  Repository:
    Type: String
    Default: "https://github.com/kpagacz/notes"
    Description: GitHub Repository URL
  AccessToken:
    Type: String
    Description: Personal Access Token from Github
    NoEcho: true

Resources:
  # Amplify setup
  AmplifyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - amplify.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: Amplify
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "amplify:*"
                Resource: "*"

  NotesAmplify:
    Type: AWS::Amplify::App
    Properties:
      Description: The notes application
      Name: notes-application
      Repository: !Ref Repository
      AccessToken: !Ref AccessToken
      AutoBranchCreationConfig:
        AutoBranchCreationPatterns:
          - main
        EnableAutoBranchCreation: true
        EnableAutoBuild: true
        EnablePerformanceMode: false
      BuildSpec: |-
        version: 1
        applications:
          - frontend:
              phases:
                preBuild:
                  commands:
                    - npm install
                build:
                  commands:
                    - npm run build
              artifacts:
                baseDirectory: build
                files:
                  - '**/*'
              cache:
                paths:
                  - node_modules/**/*
            appRoot: frontend
      EnableBranchAutoDeletion: true
      IAMServiceRole: !GetAtt AmplifyRole.Arn
  MainAmplifyBranch:
    Type: AWS::Amplify::Branch
    Properties:
      AppId: !GetAtt NotesAmplify.AppId
      BranchName: main
      Description: The main production branch
      EnableAutoBuild: true

  # DynamoDB setup
  NotesDynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Notes
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "createdBy"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        - AttributeName: "createdBy"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TimeToLiveSpecification:
        AttributeName: expirationDate
        Enabled: true

  # Lambdas
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"

  PostLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Handles the POST endpoint of the notes application
      FunctionName: notesPostHandler
      Handler: index.handler
      Code:
        ZipFile: |-
          exports.handler = (event, context, callback) => {
            console.log("Event registered: ", event);
            callback(null, {
              statusCode: 200,
              body: JSON.stringify({
                  msg: "success"
              }),
              headers: {
                  'Access-Control-Allow-Origin': '*',
              },
            });
          }
      Role: !GetAtt LambdaRole.Arn
      Runtime: "nodejs14.x"
